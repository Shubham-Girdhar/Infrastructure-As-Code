# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo K8S Terraform Azure
  displayName: 'Run a one-line script'

- task: DownloadSecureFile@1
  name: publickey 
  inputs:
    secureFile: 'azure_rsa.pub'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform_Configurations' 
    backendType: 'azurerm'
    backendServiceArm: 'azure-service-connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'backend-rg'
    backendAzureRmResourceGroupLocation: 'eastus'
    backendAzureRmStorageAccountName: 'iacprojectstorageaccount'
    backendAzureRmContainerName: 'storageaccontainer'
    backendAzureRmKey: 'k8.tfstate'
    allowTelemetryCollection: true

- task: TerraformCLI@0
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform_Configurations'
    environmentServiceName: 'azure-service-connection'
    commandOptions: '''-var client_id =$(client_id) -var client_secret =$(client_secret) -var ssh_public_key =$(publickey.secureFilePath)'

